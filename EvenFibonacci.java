/**@author Rachel, Project Euler Problem #2, Even Fibonacci Numbers
 *https://projecteuler.net/problem=2
 *Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 *By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class EvenFibonacci {

	public static void main(String[] args) {
		//f_n = fn_1 + fn_2 
		long a = 0;
		long b = 1; 
		long c = 0;
		long sum = 0;
		while(c < 4000000) {
			//while the c (the sum of the previous two terms) is less then 4 million
			c = a + b;
			if(c % 2 == 0) {
				//if c is even, add to sum
				sum += c;
			}
			/**shifting each index to the right one, and repeating
			 * (on first iteration, a becomes 1, and b becomes one.**/
			a = b;
			b = c;
		}
		System.out.println("The sum of all fibonacci numbers below 4 million is " + sum);
	}
}
