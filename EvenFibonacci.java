/**@author Rachel, Project Euler Problem #2, Even Fibonacci Numbers
 *https://projecteuler.net/problem=2
 *Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 *By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 *find the sum of the even-valued terms.*/
public class EvenFibonacci {
	public static void main(String[] args) {
		//f_n = fn_1 + fn_2 
		long k = 0; 
		long n = 2;
		long sum = n + k;
		//sum starts at two, since two is the first even number of the sequence.
		while(n < 4000000) {
			/**2  8 34 144... (even numbers at beginning of sequence)
			*every even fibonacci number is 4(n-1)+ (n-2) starting with two.
			4 * 8 = 32, + 2 = 34, and so on...**/
			long j = 4*n + k;
			sum+= n;
			k = n;
			n = j;
		}
		System.out.println("The sum of all fibonacci numbers below 4 million is " + sum);
	}
}
